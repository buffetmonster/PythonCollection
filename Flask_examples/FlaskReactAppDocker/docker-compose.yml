#version is deprecated
#version: "3.9"

services:
  backend:
    container_name: backend_container
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000" # Map host port to container port
      - "5678:5678" # Map debugging port
    networks:
      - mynetwork
    #volumes:
      #- ./backend:/backend # Mount the backend directory
      #- ./start_backend_interactive_mode.sh:/start_backend_interactive_mode.sh # only needed when running in interative mode
      #- ./requirements.txt:/backend/requirements.txt  #only really needed if using interactive mode
    #environment:
      #- DEBUGFE=1
      #- DEBUGFE: "true" # Enable debugging
      #- AUTO_START: "1" # Set to "1" to automatically start, remove to enter interactive mode
    #tty: true
    #stdin_open: true
    #for debug purposes, add to enter console debug mode
    #command: sleep infinity
    #command: sh -c "if [ \"$AUTO_START\" = \"1\" ]; then python3 -m debugpy --listen 5678 --wait-for-client main.py; else python3 main.py; fi"
    environment:
      - DEBUGFE=1
    #command: sh -c "if [ \"true\" = \"true\" ]; then python3 -m debugpy #--listen 5678 --wait-for-client main.py; else python3 main.py; fi"
    #command: sh -c "if [ \"true\" = \"true\" ]; then python3 -Xfrozen_modules=off -m debugpy --listen 5678 --wait-for-client main.py; else python3 main.py; fi"
    #command: python3 -Xfrozen_modules=off -m debugpy --listen 5678 --wait-for-client main.py
    #command: python3 -Xfrozen_modules=off -m debugpy --listen 0.0.0.0:5678 --wait-for-client main.py
    command: python3 main.py
  frontend:
    container_name: frontend_container
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      #- "5173:5173" # Map host port 3000 to container port 5173
      - "3000:3000" # Map host port 3000 to container port 3000, for Nginx
    networks:
      - mynetwork
    #volumes:
    #    - ./frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true #needed if you have file watching issues.
    #command: npm run dev --host 0.0.0.0 --force
    #command: npm run dev --host 127.0.0.1
    #command: npx vite --host 127.0.0.1
    #command: npx vite --host 127.0.0.1 --force
    command: npx vite --host 0.0.0.0 --force
    #command: npx vite --host 0.0.0.0
networks:
  mynetwork:
    driver: bridge